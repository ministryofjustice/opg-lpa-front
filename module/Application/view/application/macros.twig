{# Form Validation - Error Summary #}
{% macro formErrorSummary(error, form, message) %}

    {% if (error is not empty or form.getMessages|length > 0) %}
    <div class="error-summary" role="group" aria-labelledby="error-heading" tabindex="-1">
        <h1 class="heading-medium error-summary-heading" id="error-heading">{{ message }}</h1>

        {# Show this only if it's a form error #}
        {% if form.getMessages|length > 0 %}
            <p>You need to do the following:</p>
        {% endif %}
        
        <ul class="error-summary-list text">
            {# Form errors #}
            {{ formLinkedErrorListV2(form) ? '' }}

            {# API errors #}
            {% if error is not empty %}
                <li><p>
                {% if error == 'user-not-found' %}
                    We could not find an account for this email address.
                {% elseif error == 'address-already-registered' %}
                    <p>This email address has already been registered. Please <a href="{{ url('login') }}">sign in</a> or <a href="{{ url('forgot-password') }}">reset your password</a>.</p>
                {% else %}
                    {{ error }}
                {% endif %}
            </p></li>
            {% endif %}
        </ul>
    </div>
    {% endif %}
	
{% endmacro %}

{# Text input #}
{% macro formGroup(element) %}

<div class="form-group {{ element.getMessages|length >0 ? 'error'}}">
    <label class="form-label" for="{{ element.getAttribute('id') }}">
        {{ element.getOption('label') }}
        {{ formElementErrorsV2(element) }}
    </label>
    {{ formElement(element) }}
</div>

{% endmacro %}

{# Checkbox #}
{% macro formGroupCheckbox(element) %}

<div class="option group">
    <label class="form-label" for="{{ element.getAttribute('id') }}">
        {{ element.getOption('label')|raw }}
    </label>
    {{ formElement(element) }}
</div>

{% endmacro %}

{# JS check dob #}
{% macro addDobCheckOnUseMyDetails(isUseMyDetails) %}
	{% if (isUseMyDetails) %}
		if ($('#dob-date-day').val()) {
			dobChecks($('.dob-element'));
		}
	{% endif %}
{% endmacro %}

{# Reuse contacts picker #}
{% macro renderPickerForm(form, pickerForm) %}
    {% if (pickerForm) %}

    {{ pickerForm.setAttribute('class', 'form') ? '' }}
    {% set pickerSubmit = pickerForm.get('submit') %}
    {{ pickerSubmit.setAttributes({'value': "Use this person's details", 'class' : 'button details-picker'}) ? '' }}
    {{ pickerForm.prepare() ? '' }}
    
    {% set picker = pickerForm.get('pick-details') %}
    {{ picker.setAttributes({'id':'pick-details', 'class':'js-reusable'}) ? '' }}
    {{ picker.setOptions({'label': 'Use these details', 'empty_option' : 'Choose a person'}) ? '' }}
    {% set pickerCsrf = pickerForm.get(pickerForm.csrfName()) %}
    {{ pickerCsrf.setAttributes({'id' : 'secret'}) ? '' }}
    
    {{ form().openTag(pickerForm)|raw }}
    {{ formElement(pickerCsrf) }}
    
        <div class="role-select group">
            <label>{{ picker.getOption('label') }}</label>
            {{ formSelect(picker) }}
            {{ formElementErrors(picker) }}
            {{ formSubmit(pickerSubmit) }}
        </div>
    
    {{ form().closeTag|raw }}
        
    {% endif %}
{% endmacro %}


{% macro useMyDetails(useMyDetailsRoute) %}
    {% if (useMyDetailsRoute) %}
    <div class="panel-actions">
        <a class="js-form-popup" href="{{ useMyDetailsRoute }}">Use my details</a>
    </div>
    {% endif %}
{% endmacro %}
